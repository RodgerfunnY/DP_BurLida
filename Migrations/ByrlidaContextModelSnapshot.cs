// <auto-generated />
using System;
using DP_BurLida.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DP_BurLida.Migrations
{
    [DbContext(typeof(ByrlidaContext))]
    partial class ByrlidaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DP_BurLida.Data.ModelsData.BrigadeEquipmentModelData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AssignmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BrigadeId")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BrigadeId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("BrigadeEquipmentModelData", (string)null);
                });

            modelBuilder.Entity("DP_BurLida.Data.ModelsData.BrigadeModelData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NameBrigade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ResponsibleUserId")
                        .HasColumnType("int");

                    b.Property<string>("Technic")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ResponsibleUserId");

                    b.ToTable("BrigadeModelData");
                });

            modelBuilder.Entity("DP_BurLida.Data.ModelsData.EquipmentModelData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("EquipmentModelData", (string)null);
                });

            modelBuilder.Entity("DP_BurLida.Data.ModelsData.OrderBrigadeModelData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AssignmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BrigadeId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BrigadeId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderBrigadeModelData", (string)null);
                });

            modelBuilder.Entity("DP_BurLida.Data.ModelsData.OrderModelData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Область");

                    b.Property<string>("Arrangement")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Обустройство");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Населеный пункт");

                    b.Property<DateTime>("CreationTimeData")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("Дата создания")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("Diameter")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Диаметр скважины");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Район");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Дополнительная информация");

                    b.Property<string>("NameClient")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Имя");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("Номер телефона");

                    b.Property<int>("PricePerMeter")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Цена за метр");

                    b.Property<int>("Pump")
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasColumnName("Насос с монтажом");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurnameClient")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Фамилия");

                    b.Property<DateTime?>("WorkDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Дата работы");

                    b.HasKey("Id");

                    b.ToTable("Заказы", (string)null);
                });

            modelBuilder.Entity("DP_BurLida.Data.ModelsData.SkladModelData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameSubjecte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SkladModelData");
                });

            modelBuilder.Entity("DP_BurLida.Data.ModelsData.UserModelData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BrigadeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BrigadeId");

                    b.ToTable("UserModelData", (string)null);
                });

            modelBuilder.Entity("DP_BurLida.Data.ModelsData.BrigadeEquipmentModelData", b =>
                {
                    b.HasOne("DP_BurLida.Data.ModelsData.BrigadeModelData", "Brigade")
                        .WithMany("BrigadeEquipments")
                        .HasForeignKey("BrigadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DP_BurLida.Data.ModelsData.EquipmentModelData", "Equipment")
                        .WithMany("BrigadeEquipments")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brigade");

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("DP_BurLida.Data.ModelsData.BrigadeModelData", b =>
                {
                    b.HasOne("DP_BurLida.Data.ModelsData.UserModelData", "ResponsibleUser")
                        .WithMany()
                        .HasForeignKey("ResponsibleUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ResponsibleUser");
                });

            modelBuilder.Entity("DP_BurLida.Data.ModelsData.OrderBrigadeModelData", b =>
                {
                    b.HasOne("DP_BurLida.Data.ModelsData.BrigadeModelData", "Brigade")
                        .WithMany("OrderBrigades")
                        .HasForeignKey("BrigadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DP_BurLida.Data.ModelsData.OrderModelData", "Order")
                        .WithMany("OrderBrigades")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brigade");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DP_BurLida.Data.ModelsData.UserModelData", b =>
                {
                    b.HasOne("DP_BurLida.Data.ModelsData.BrigadeModelData", "Brigade")
                        .WithMany("Members")
                        .HasForeignKey("BrigadeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Brigade");
                });

            modelBuilder.Entity("DP_BurLida.Data.ModelsData.BrigadeModelData", b =>
                {
                    b.Navigation("BrigadeEquipments");

                    b.Navigation("Members");

                    b.Navigation("OrderBrigades");
                });

            modelBuilder.Entity("DP_BurLida.Data.ModelsData.EquipmentModelData", b =>
                {
                    b.Navigation("BrigadeEquipments");
                });

            modelBuilder.Entity("DP_BurLida.Data.ModelsData.OrderModelData", b =>
                {
                    b.Navigation("OrderBrigades");
                });
#pragma warning restore 612, 618
        }
    }
}
