@model IEnumerable<DP_BurLida.Data.ModelsData.SkladModelData>

@{
    ViewData["Title"] = "Склад";
}

<h1>Склад</h1>
<p>Управление складскими запасами</p>

<div class="row mb-3">
    <div class="col-md-6">
        <a asp-action="Create" class="btn btn-success">Добавить предмет</a>
    </div>
    <div class="col-md-6">
        <form asp-action="Index" method="get" class="d-flex">
            <div class="input-group">
                <select name="category" class="form-control">
                    <option value="">Все категории</option>
                    @foreach (var category in ViewBag.Categories as List<string>)
                    {
                        <option value="@category" selected="@(ViewBag.SelectedCategory == category)">@category</option>
                    }
                </select>
                <button type="submit" class="btn btn-primary">Фильтр</button>
                @if (!string.IsNullOrEmpty(ViewBag.SelectedCategory as string))
                {
                    <a asp-action="Index" class="btn btn-secondary">Очистить</a>
                }
            </div>
        </form>
    </div>
</div>

@if (!string.IsNullOrEmpty(ViewBag.SelectedCategory as string))
{
    <div class="alert alert-info">
        Показаны предметы категории: <strong>@ViewBag.SelectedCategory</strong>
        @if (Model != null && Model.Any())
        {
            <span class="badge bg-primary ms-2">Найдено: @Model.Count()</span>
        }
        else
        {
            <span class="badge bg-warning ms-2">Ничего не найдено</span>
        }
    </div>
}

<div class="table-responsive">
<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                Название предмета
            </th>
            <th>
                Категория
            </th>
            <th>
                Количество
            </th>
            <th>
                Информация
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.NameSubjecte)
                </td>
                <td>
                    @if (!string.IsNullOrEmpty(item.Category))
                    {
                        <span class="badge @(item.Category switch {
                            "Насосное оборудование" => "bg-primary",
                            "Техника" => "bg-success", 
                            "Расходные материалы" => "bg-warning",
                            "Автоматика" => "bg-info",
                            _ => "bg-secondary"
                        })">@item.Category</span>
                    }
                    else
                    {
                        <span class="text-muted">Не указана</span>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Info)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">Редактировать</a>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info">Подробности</a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Удалить</a>
                </td>
            </tr>
        }
    </tbody>
</table>
</div>
